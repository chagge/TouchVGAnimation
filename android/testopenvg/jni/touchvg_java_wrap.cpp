/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#ifdef __ANDROID__
#define SWIG_JAVA_NO_DETACH_CURRENT_THREAD
#define SWIG_JAVA_ATTACH_CURRENT_THREAD_AS_DAEMON
#endif


#include "testvgcanvas.h"
#include "mgshapedoc.h"
#include "mglayer.h"
#include "mgstorage.h"
#include "gicanvas.h"
#include "mgbasicspreg.h"
#include "mgspfactory.h"
#include "playshapes.h"


struct TmpJOBJ {
    JNIEnv* env;
    jobject* jo;
    template <class T>
    TmpJOBJ(JNIEnv* e, T* v) : env(e), jo((jobject*)v) {}
    TmpJOBJ(JNIEnv* e, jobject& v) : env(e), jo(&v) { }
    ~TmpJOBJ() { if (*jo) { env->DeleteLocalRef(*jo); *jo = 0; } }
};
JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM* /*ajvm*/, void* /*reserved*/) {
    return JNI_VERSION_1_6;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1TestOpenVGCanvas(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  TestOpenVGCanvas *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (TestOpenVGCanvas *)new TestOpenVGCanvas(arg1,arg2,arg3);
  *(TestOpenVGCanvas **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1TestOpenVGCanvas(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1resize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->resize(arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1getWidth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  result = (int)(arg1)->getWidth();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1getHeight(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  result = (int)(arg1)->getHeight();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1prepareToDraw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2, jint jarg3) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  bool arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = (int)jarg3; 
  (arg1)->prepareToDraw(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1draw_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jboolean jarg4) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  bool arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  (arg1)->draw(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1draw_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->draw(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1dyndraw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->dyndraw(arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1beginPaint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jlong jresult = 0 ;
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  bool arg2 ;
  GiCanvas *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (GiCanvas *)((TestOpenVGCanvas const *)arg1)->beginPaint(arg2);
  *(GiCanvas **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_TestOpenVGCanvas_1endPaint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TestOpenVGCanvas *arg1 = (TestOpenVGCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TestOpenVGCanvas **)&jarg1; 
  (arg1)->endPaint();
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Tol_1gTol(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Tol *) &Tol::gTol();
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Tol_1minTol(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Tol *) &Tol::minTol();
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Tol_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Tol *)new Tol();
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Tol_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (Tol *)new Tol(arg1,arg2);
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Tol_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jlong jresult = 0 ;
  float arg1 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = (Tol *)new Tol(arg1);
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Tol_1equalPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Tol *arg1 = (Tol *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Tol **)&jarg1; 
  result = (float)((Tol const *)arg1)->equalPoint();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Tol_1equalVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Tol *arg1 = (Tol *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Tol **)&jarg1; 
  result = (float)((Tol const *)arg1)->equalVector();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Tol_1setEqualPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Tol *arg1 = (Tol *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Tol **)&jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->setEqualPoint(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Tol_1setEqualVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Tol *arg1 = (Tol *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Tol **)&jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->setEqualVector(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1Tol(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Tol *arg1 = (Tol *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Tol **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float) ((arg1)->x);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float) ((arg1)->y);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1kIdentity(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vector2d *) &Vector2d::kIdentity();
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1kXAxis(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vector2d *) &Vector2d::kXAxis();
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1kYAxis(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vector2d *) &Vector2d::kYAxis();
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Vector2d_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Vector2d *)new Vector2d();
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Vector2d_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (Vector2d *)new Vector2d(arg1,arg2);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Vector2d_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Vector2d *)new Vector2d((Vector2d const &)*arg1);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = ((Vector2d const *)arg1)->transform((Matrix2d const &)*arg2);
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = ((Vector2d const *)arg1)->add((Vector2d const &)*arg2);
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1subtract(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = ((Vector2d const *)arg1)->subtract((Vector2d const &)*arg2);
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1negate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (Vector2d *) &(arg1)->negate();
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1perpVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = ((Vector2d const *)arg1)->perpVector();
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1scaleBy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Vector2d *) &(arg1)->scaleBy(arg2,arg3);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1scaleBy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Vector2d *) &(arg1)->scaleBy(arg2);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1dotProduct(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->dotProduct((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1crossProduct(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->crossProduct((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1angle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float)((Vector2d const *)arg1)->angle();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1angle2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float)((Vector2d const *)arg1)->angle2();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1angleTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->angleTo((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1angleTo2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->angleTo2((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float)((Vector2d const *)arg1)->length();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1lengthSqrd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (float)((Vector2d const *)arg1)->lengthSqrd();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1unitVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = ((Vector2d const *)arg1)->unitVector();
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1normalize_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Tol *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->normalize((Tol const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1normalize_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (bool)(arg1)->normalize();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isUnitVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Tol *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isUnitVector((Tol const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isUnitVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (bool)((Vector2d const *)arg1)->isUnitVector();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isZeroVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Tol *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isZeroVector((Tol const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isZeroVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  result = (bool)((Vector2d const *)arg1)->isZeroVector();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isEqualTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isEqualTo((Vector2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isEqualTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isEqualTo((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Vector2d *) &(arg1)->set(arg2,arg3);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1setAngleLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Vector2d *) &(arg1)->setAngleLength(arg2,arg3);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1setLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  float arg2 ;
  Vector2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Vector2d *) &(arg1)->setLength(arg2);
  *(Vector2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isRightOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isRightOf((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isLeftOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isLeftOf((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isParallelTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isParallelTo((Vector2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isParallelTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isParallelTo((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isCodirectionalTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isCodirectionalTo((Vector2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isCodirectionalTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isCodirectionalTo((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isOppositeTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isOppositeTo((Vector2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isOppositeTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isOppositeTo((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isPerpendicularTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isPerpendicularTo((Vector2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1isPerpendicularTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->isPerpendicularTo((Vector2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1distanceToVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->distanceToVector((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1projectScaleToVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->projectScaleToVector((Vector2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1projectResolveVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jfloat jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  Vector2d *arg4 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return 0;
  } 
  arg4 = *(Vector2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return 0;
  } 
  result = (float)((Vector2d const *)arg1)->projectResolveVector((Vector2d const &)*arg2,*arg3,*arg4);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1resolveVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  Vector2d *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg4 = *(Vector2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return 0;
  } 
  result = (bool)((Vector2d const *)arg1)->resolveVector((Vector2d const &)*arg2,(Vector2d const &)*arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Vector2d_1resolveVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Vector2d *arg1 = (Vector2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->resolveVector((Vector2d const &)*arg2,(Vector2d const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1Vector2d(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Vector2d *arg1 = (Vector2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Vector2d **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Point2d_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Point2d_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  result = (float) ((arg1)->x);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Point2d_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Point2d_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  result = (float) ((arg1)->y);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1kOrigin(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Point2d *) &Point2d::kOrigin();
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Point2d_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Point2d *)new Point2d();
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Point2d_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (Point2d *)new Point2d(arg1,arg2);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Point2d_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Point2d *)new Point2d((Point2d const &)*arg1);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = ((Point2d const *)arg1)->transform((Matrix2d const &)*arg2);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1scaleBy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Point2d *) &(arg1)->scaleBy(arg2,arg3);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1scaleBy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Point2d *) &(arg1)->scaleBy(arg2);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Point2d_1offset_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->offset(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Point2d_1offset_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  Point2d *arg1 = (Point2d *) 0 ;
  Vector2d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return ;
  } 
  (arg1)->offset((Vector2d const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = ((Point2d const *)arg1)->add((Point2d const &)*arg2);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1subtract_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = ((Point2d const *)arg1)->subtract((Point2d const &)*arg2);
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1subtract_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = ((Point2d const *)arg1)->subtract((Vector2d const &)*arg2);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1negate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  result = ((Point2d const *)arg1)->negate();
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1asVector(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  result = ((Point2d const *)arg1)->asVector();
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Point2d_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  result = (float)((Point2d const *)arg1)->length();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Point2d_1distanceTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (float)((Point2d const *)arg1)->distanceTo((Point2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Point2d_1distanceSquare(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (float)((Point2d const *)arg1)->distanceSquare((Point2d const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Point2d_1isEqualTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Point2d const *)arg1)->isEqualTo((Point2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Point2d_1isEqualTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)((Point2d const *)arg1)->isEqualTo((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Point2d *) &(arg1)->set(arg2,arg3);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1polarPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = ((Point2d const *)arg1)->polarPoint(arg2,arg3);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1rulerPoint_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  float arg3 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  result = ((Point2d const *)arg1)->rulerPoint((Point2d const &)*arg2,arg3);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Point2d_1rulerPoint_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jfloat jarg4) {
  jlong jresult = 0 ;
  Point2d *arg1 = (Point2d *) 0 ;
  Point2d *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = ((Point2d const *)arg1)->rulerPoint((Point2d const &)*arg2,arg3,arg4);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1Point2d(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Point2d *arg1 = (Point2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Point2d **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m11_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m11 = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m11_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->m11);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m12_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m12 = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m12_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->m12);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m21_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m21 = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m21_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->m21);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m22_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->m22 = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1m22_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->m22);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1dx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dx = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1dx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->dx);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1dy_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dy = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1dy_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float) ((arg1)->dy);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1kIdentity(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Matrix2d *) &Matrix2d::kIdentity();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Matrix2d_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Matrix2d *)new Matrix2d();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Matrix2d_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *)new Matrix2d((Matrix2d const &)*arg1);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Matrix2d_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  result = (Matrix2d *)new Matrix2d(arg1,arg2,arg3,arg4,arg5,arg6);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Matrix2d_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = 0 ;
  Vector2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *)new Matrix2d((Vector2d const &)*arg1,(Vector2d const &)*arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1preMultBy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->preMultBy((Matrix2d const &)*arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1postMultBy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->postMultBy((Matrix2d const &)*arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToProduct(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Matrix2d *arg3 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  arg3 = *(Matrix2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToProduct((Matrix2d const &)*arg2,(Matrix2d const &)*arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1TransformPoints(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  ((Matrix2d const *)arg1)->TransformPoints(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1TransformVectors(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  int arg2 ;
  Vector2d *arg3 = (Vector2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Vector2d **)&jarg3; 
  ((Matrix2d const *)arg1)->TransformVectors(arg2,arg3);
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1det(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float)((Matrix2d const *)arg1)->det();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1invert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (bool)(arg1)->invert();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = ((Matrix2d const *)arg1)->inverse();
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1isInvertible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (bool)((Matrix2d const *)arg1)->isInvertible();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float)((Matrix2d const *)arg1)->scale();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaleX(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float)((Matrix2d const *)arg1)->scaleX();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaleY(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float)((Matrix2d const *)arg1)->scaleY();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1angle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (float)((Matrix2d const *)arg1)->angle();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1isEqualTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Matrix2d const *)arg1)->isEqualTo((Matrix2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1isEqualTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (bool)((Matrix2d const *)arg1)->isEqualTo((Matrix2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1isIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (bool)((Matrix2d const *)arg1)->isIdentity();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1isOrtho(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (bool)((Matrix2d const *)arg1)->isOrtho();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1hasMirror(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Vector2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return 0;
  } 
  result = (bool)((Matrix2d const *)arg1)->hasMirror(*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setCoordSystem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setCoordSystem((Vector2d const &)*arg2,(Vector2d const &)*arg3,(Point2d const &)*arg4);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1getCoordSystem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return ;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d & reference is null");
    return ;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d & reference is null");
    return ;
  } 
  ((Matrix2d const *)arg1)->getCoordSystem(*arg2,*arg3,*arg4);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1coordSystem_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = 0 ;
  Vector2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Vector2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::coordSystem((Vector2d const &)*arg1,(Vector2d const &)*arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1coordSystem_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = Matrix2d::coordSystem((Point2d const &)*arg1,arg2,arg3,arg4);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1coordSystem_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = Matrix2d::coordSystem((Point2d const &)*arg1,arg2,arg3);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1coordSystem_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  float arg2 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = (float)jarg2; 
  result = Matrix2d::coordSystem((Point2d const &)*arg1,arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (Matrix2d *) &(arg1)->setToIdentity();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  result = (Matrix2d *) &(arg1)->set(arg2,arg3,arg4,arg5,arg6,arg7);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToTranslation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToTranslation((Vector2d const &)*arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToRotation_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  Point2d *arg3 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToRotation(arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToRotation_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Matrix2d *) &(arg1)->setToRotation(arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToScaling_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  Point2d *arg3 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToScaling(arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToScaling_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Matrix2d *) &(arg1)->setToScaling(arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToScaling_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Point2d *arg4 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToScaling(arg2,arg3,(Point2d const &)*arg4);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToScaling_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Matrix2d *) &(arg1)->setToScaling(arg2,arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToMirroring_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Point2d *arg2 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToMirroring((Point2d const &)*arg2);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToMirroring_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  result = (Matrix2d *) &(arg1)->setToMirroring();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToMirroring_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  Point2d *arg2 = 0 ;
  Vector2d *arg3 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Vector2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToMirroring((Point2d const &)*arg2,(Vector2d const &)*arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToShearing_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Point2d *arg4 = 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Matrix2d *) &(arg1)->setToShearing(arg2,arg3,(Point2d const &)*arg4);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1setToShearing_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Matrix2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Matrix2d *) &(arg1)->setToShearing(arg2,arg3);
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1translation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Vector2d *arg1 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Vector2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::translation((Vector2d const &)*arg1);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1rotation_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  float arg1 ;
  Point2d *arg2 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (float)jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::rotation(arg1,(Point2d const &)*arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1rotation_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jlong jresult = 0 ;
  float arg1 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = Matrix2d::rotation(arg1);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaling_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  float arg1 ;
  Point2d *arg2 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (float)jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::scaling(arg1,(Point2d const &)*arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaling_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jlong jresult = 0 ;
  float arg1 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = Matrix2d::scaling(arg1);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaling_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Point2d *arg3 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::scaling(arg1,arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1scaling_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = Matrix2d::scaling(arg1,arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1mirroring_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::mirroring((Point2d const &)*arg1);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1mirroring_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  result = Matrix2d::mirroring();
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1mirroring_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  Vector2d *arg2 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::mirroring((Point2d const &)*arg1,(Vector2d const &)*arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1shearing_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Point2d *arg3 = 0 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = Matrix2d::shearing(arg1,arg2,(Point2d const &)*arg3);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Matrix2d_1shearing_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Matrix2d result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = Matrix2d::shearing(arg1,arg2);
  *(Matrix2d **)&jresult = new Matrix2d((const Matrix2d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1Matrix2d(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Matrix2d *arg1 = (Matrix2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Matrix2d **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1left_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->left = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1left_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float) ((arg1)->left);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1top_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->top = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1top_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float) ((arg1)->top);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1right_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->right = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1right_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float) ((arg1)->right);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1bottom_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->bottom = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1bottom_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float) ((arg1)->bottom);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1RECT_12D(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  tagRECT2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (tagRECT2D *)new tagRECT2D();
  *(tagRECT2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1width(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float)((tagRECT2D const *)arg1)->width();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_RECT_12D_1height(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(tagRECT2D **)&jarg1; 
  result = (float)((tagRECT2D const *)arg1)->height();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1RECT_12D(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  tagRECT2D *arg1 = (tagRECT2D *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(tagRECT2D **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Box2d_1xmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->xmin = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1xmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float) ((arg1)->xmin);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Box2d_1ymin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ymin = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1ymin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float) ((arg1)->ymin);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Box2d_1xmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->xmax = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1xmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float) ((arg1)->xmax);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Box2d_1ymax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ymax = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1ymax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float) ((arg1)->ymax);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1kIdentity(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Box2d *) &Box2d::kIdentity();
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Box2d *)new Box2d();
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jlong jresult = 0 ;
  Box2d *arg1 = 0 ;
  bool arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = (Box2d *)new Box2d((Box2d const &)*arg1,arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *)new Box2d((Box2d const &)*arg1);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  Point2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Box2d *)new Box2d((Point2d const &)*arg1,(Point2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  bool arg5 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (Box2d *)new Box2d(arg1,arg2,arg3,arg4,arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = (Box2d *)new Box2d(arg1,arg2,arg3,arg4);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jlong jresult = 0 ;
  RECT_2D *arg1 = 0 ;
  bool arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RECT_2D **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "RECT_2D const & reference is null");
    return 0;
  } 
  arg2 = jarg2 ? true : false; 
  result = (Box2d *)new Box2d((RECT_2D const &)*arg1,arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RECT_2D *arg1 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RECT_2D **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "RECT_2D const & reference is null");
    return 0;
  } 
  result = (Box2d *)new Box2d((RECT_2D const &)*arg1);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3, jint jarg4, jboolean jarg5) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (Box2d *)new Box2d(arg1,arg2,arg3,arg4,arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (Box2d *)new Box2d(arg1,arg2,arg3,arg4);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Box2d *)new Box2d((Point2d const &)*arg1,(Point2d const &)*arg2,(Point2d const &)*arg3,(Point2d const &)*arg4);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  int arg1 ;
  Point2d *arg2 = (Point2d *) 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(Point2d **)&jarg2; 
  result = (Box2d *)new Box2d(arg1,(Point2d const *)arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Point2d *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Point2d **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *)new Box2d((Point2d const &)*arg1,arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1Box2d_1_1SWIG_113(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (Box2d *)new Box2d(arg1,arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_Box2d_1get_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d & reference is null");
    return ;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d & reference is null");
    return ;
  } 
  ((Box2d const *)arg1)->get(*arg2,*arg3);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1get_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  RECT_2D *arg2 = 0 ;
  RECT_2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(RECT_2D **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "RECT_2D & reference is null");
    return 0;
  } 
  result = (RECT_2D *) &((Box2d const *)arg1)->get(*arg2);
  *(RECT_2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  bool arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (Box2d *) &(arg1)->set((Box2d const &)*arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->set((Box2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->set((Point2d const &)*arg2,(Point2d const &)*arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (Box2d *) &(arg1)->set(arg2,arg3,arg4,arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  Point2d *arg5 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg5 = *(Point2d **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->set((Point2d const &)*arg2,(Point2d const &)*arg3,(Point2d const &)*arg4,(Point2d const &)*arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  result = (Box2d *) &(arg1)->set(arg2,(Point2d const *)arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1set_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jfloat jarg4) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  result = (Box2d *) &(arg1)->set((Point2d const &)*arg2,arg3,arg4);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1width(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float)((Box2d const *)arg1)->width();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_Box2d_1height(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (float)((Box2d const *)arg1)->height();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Vector2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->size();
  *(Vector2d **)&jresult = new Vector2d((const Vector2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1center(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->center();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1leftTop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->leftTop();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1rightTop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->rightTop();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1leftBottom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->leftBottom();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1rightBottom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = ((Box2d const *)arg1)->rightBottom();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1normalize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (Box2d *) &(arg1)->normalize();
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1swapTopBottom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (Box2d *) &(arg1)->swapTopBottom();
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (Box2d *) &(arg1)->empty();
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isNormalized(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (bool)((Box2d const *)arg1)->isNormalized();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isNull(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (bool)((Box2d const *)arg1)->isNull();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEmpty_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Tol *arg2 = 0 ;
  bool arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (bool)((Box2d const *)arg1)->isEmpty((Tol const &)*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEmpty_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Tol *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->isEmpty((Tol const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEmpty_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (bool)((Box2d const *)arg1)->isEmpty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEmptyMinus_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Tol *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Tol **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->isEmptyMinus((Tol const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEmptyMinus_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  result = (bool)((Box2d const *)arg1)->isEmptyMinus();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1contains_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->contains((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1contains_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->contains((Point2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1contains_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->contains((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1contains_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->contains((Box2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1inflate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Box2d *) &(arg1)->inflate(arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1inflate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *) &(arg1)->inflate(arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1inflate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->inflate((Vector2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1inflate_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->inflate((Box2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1inflate_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (Box2d *) &(arg1)->inflate(arg2,arg3,arg4,arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1deflate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Box2d *) &(arg1)->deflate(arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1deflate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *) &(arg1)->deflate(arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1deflate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->deflate((Vector2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1deflate_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->deflate((Box2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1deflate_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (Box2d *) &(arg1)->deflate(arg2,arg3,arg4,arg5);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1offset_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *) &(arg1)->offset(arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1offset_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Vector2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->offset((Vector2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1scaleBy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *) &(arg1)->scaleBy(arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1scaleBy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (Box2d *) &(arg1)->scaleBy(arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isIntersect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->isIntersect((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1intersectWith_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *arg3 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->intersectWith((Box2d const &)*arg2,(Box2d const &)*arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1intersectWith_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->intersectWith((Box2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1unionWith_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *arg3 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->unionWith((Box2d const &)*arg2,(Box2d const &)*arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1unionWith_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->unionWith((Box2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1unionWith_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  float arg2 ;
  float arg3 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (Box2d *) &(arg1)->unionWith(arg2,arg3);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1unionWith_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Point2d *arg2 = 0 ;
  Box2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (Box2d *) &(arg1)->unionWith((Point2d const &)*arg2);
  *(Box2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_Box2d_1offset_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = ((Box2d const *)arg1)->offset((Box2d const &)*arg2);
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEqualTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  Tol *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(Tol **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Tol const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->isEqualTo((Box2d const &)*arg2,(Tol const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_Box2d_1isEqualTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  Box2d *arg1 = (Box2d *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(Box2d **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)((Box2d const *)arg1)->isEqualTo((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1Box2d(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  Box2d *arg1 = (Box2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(Box2d **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiTransform_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jboolean jarg1) {
  jlong jresult = 0 ;
  bool arg1 ;
  GiTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = jarg1 ? true : false; 
  result = (GiTransform *)new GiTransform(arg1);
  *(GiTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiTransform_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (GiTransform *)new GiTransform();
  *(GiTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiTransform_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = 0 ;
  GiTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiTransform const & reference is null");
    return 0;
  } 
  result = (GiTransform *)new GiTransform((GiTransform const &)*arg1);
  *(GiTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiTransform(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiTransform *arg1 = (GiTransform *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiTransform **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  GiTransform *arg2 = 0 ;
  GiTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(GiTransform **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiTransform const & reference is null");
    return 0;
  } 
  result = (GiTransform *) &(arg1)->copy((GiTransform const &)*arg2);
  *(GiTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getDpiX(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getDpiX();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getDpiY(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getDpiY();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWidth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (long)((GiTransform const *)arg1)->getWidth();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getHeight(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (long)((GiTransform const *)arg1)->getHeight();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getCenterW(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = ((GiTransform const *)arg1)->getCenterW();
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getViewScale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getViewScale();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWorldToDisplayX_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  bool arg2 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (float)((GiTransform const *)arg1)->getWorldToDisplayX(arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWorldToDisplayX_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getWorldToDisplayX();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWorldToDisplayY_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  bool arg2 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (float)((GiTransform const *)arg1)->getWorldToDisplayY(arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWorldToDisplayY_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getWorldToDisplayY();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1displayToModel_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jboolean jarg3) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  bool arg3 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (float)((GiTransform const *)arg1)->displayToModel(arg2,arg3);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1displayToModel_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (float)((GiTransform const *)arg1)->displayToModel(arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1modelToWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->modelToWorld();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1worldToModel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->worldToModel();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1displayToWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->displayToWorld();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1worldToDisplay(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->worldToDisplay();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1displayToModel_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->displayToModel();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1modelToDisplay(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (Matrix2d *) &((GiTransform const *)arg1)->modelToDisplay();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setWndSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  long arg2 ;
  long arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (long)jarg3; 
  result = (bool)(arg1)->setWndSize(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setResolution_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->setResolution(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setResolution_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->setResolution(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setModelTransform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return ;
  } 
  (arg1)->setModelTransform((Matrix2d const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWndRectW(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = ((GiTransform const *)arg1)->getWndRectW();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWndRectM(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = ((GiTransform const *)arg1)->getWndRectM();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getMinViewScale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getMinViewScale();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getMaxViewScale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (float)((GiTransform const *)arg1)->getMaxViewScale();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getWorldLimits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = ((GiTransform const *)arg1)->getWorldLimits();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setViewScaleRange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->setViewScaleRange(arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1setWorldLimits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d *arg2 = 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (arg1)->setWorldLimits((Box2d const &)*arg2);
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomWnd_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomWnd((Point2d const &)*arg2,(Point2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomWnd_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->zoomWnd((Point2d const &)*arg2,(Point2d const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d *arg2 = 0 ;
  RECT_2D *arg3 = (RECT_2D *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(RECT_2D **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomTo((Box2d const &)*arg2,(RECT_2D const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d *arg2 = 0 ;
  RECT_2D *arg3 = (RECT_2D *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(RECT_2D **)&jarg3; 
  result = (bool)(arg1)->zoomTo((Box2d const &)*arg2,(RECT_2D const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->zoomTo((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomTo((Point2d const &)*arg2,(Point2d const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3; 
  result = (bool)(arg1)->zoomTo((Point2d const &)*arg2,(Point2d const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomTo_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->zoomTo((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomPan_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  float arg3 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomPan(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomPan_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  float arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  result = (bool)(arg1)->zoomPan(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomByFactor_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomByFactor(arg2,(Point2d const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomByFactor_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  result = (bool)(arg1)->zoomByFactor(arg2,(Point2d const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomByFactor_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (bool)(arg1)->zoomByFactor(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomScale_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->zoomScale(arg2,(Point2d const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomScale_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  result = (bool)(arg1)->zoomScale(arg2,(Point2d const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoomScale_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  float arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = (float)jarg2; 
  result = (bool)(arg1)->zoomScale(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1zoom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d arg2 ;
  float arg3 ;
  Point2d *argp2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  argp2 = *(Point2d **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null Point2d");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (float)jarg3; 
  result = (bool)(arg1)->zoom(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1enableZoom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  jboolean jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  bool arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (bool)(arg1)->enableZoom(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getZoomValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Point2d *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d & reference is null");
    return 0;
  } 
  result = (float)((GiTransform const *)arg1)->getZoomValue(*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiTransform_1getZoomTimes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (long)((GiTransform const *)arg1)->getZoomTimes();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiSaveModelTransform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  Matrix2d *arg2 = 0 ;
  GiSaveModelTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiTransform **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return 0;
  } 
  result = (GiSaveModelTransform *)new GiSaveModelTransform((GiTransform const *)arg1,(Matrix2d const &)*arg2);
  *(GiSaveModelTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiSaveModelTransform(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiSaveModelTransform *arg1 = (GiSaveModelTransform *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiSaveModelTransform **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kGiCloseFigure_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiPathNode result;
  
  (void)jenv;
  (void)jcls;
  result = (GiPathNode)kGiCloseFigure;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kGiLineTo_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiPathNode result;
  
  (void)jenv;
  (void)jcls;
  result = (GiPathNode)kGiLineTo;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kGiBeziersTo_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiPathNode result;
  
  (void)jenv;
  (void)jcls;
  result = (GiPathNode)kGiBeziersTo;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kGiMoveTo_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiPathNode result;
  
  (void)jenv;
  (void)jcls;
  result = (GiPathNode)kGiMoveTo;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiPath *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (GiPath *)new GiPath();
  *(GiPath **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiPath *arg1 = 0 ;
  GiPath *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiPath const & reference is null");
    return 0;
  } 
  result = (GiPath *)new GiPath((GiPath const &)*arg1);
  *(GiPath **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiPath_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_, jstring jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  Point2d *arg2 = (Point2d *) 0 ;
  char *arg3 = (char *) 0 ;
  GiPath *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(Point2d **)&jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (GiPath *)new GiPath(arg1,(Point2d const *)arg2,(char const *)arg3);
  *(GiPath **)&jresult = result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiPath(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiPath *arg1 = (GiPath *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiPath **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiPath_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  GiPath *arg2 = 0 ;
  GiPath *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(GiPath **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiPath const & reference is null");
    return 0;
  } 
  result = (GiPath *) &(arg1)->copy((GiPath const &)*arg2);
  *(GiPath **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1genericRoundLines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jfloat jarg4, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  float arg4 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = (float)jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->genericRoundLines(arg2,(Point2d const *)arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1genericRoundLines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jfloat jarg4) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  float arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = (float)jarg4; 
  result = (bool)(arg1)->genericRoundLines(arg2,(Point2d const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiPath_1getCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  result = (int)((GiPath const *)arg1)->getCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiPath_1getPoints(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  result = (Point2d *)((GiPath const *)arg1)->getPoints();
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_touchvg_core_touchvgJNI_GiPath_1getTypes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  result = (char *)((GiPath const *)arg1)->getTypes();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiPath_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiPath *arg1 = (GiPath *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiPath_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  GiPath *arg1 = (GiPath *) 0 ;
  Matrix2d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return ;
  } 
  (arg1)->transform((Matrix2d const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiPath_1startFigure(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiPath *arg1 = (GiPath *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  (arg1)->startFigure();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1moveTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->moveTo((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1lineTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->lineTo((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1linesTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  result = (bool)(arg1)->linesTo(arg2,(Point2d const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1beziersTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->beziersTo(arg2,(Point2d const *)arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1beziersTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  int arg2 ;
  Point2d *arg3 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3; 
  result = (bool)(arg1)->beziersTo(arg2,(Point2d const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1arcTo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  Point2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->arcTo((Point2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1arcTo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  Point2d *arg2 = 0 ;
  Point2d *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiPath **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->arcTo((Point2d const &)*arg2,(Point2d const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiPath_1closeFigure(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiPath *arg1 = (GiPath *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiPath **)&jarg1; 
  result = (bool)(arg1)->closeFigure();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jshort JNICALL Java_touchvg_core_touchvgJNI_GiColor_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (unsigned char) ((arg1)->r);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jshort JNICALL Java_touchvg_core_touchvgJNI_GiColor_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (unsigned char) ((arg1)->g);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT jshort JNICALL Java_touchvg_core_touchvgJNI_GiColor_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (unsigned char) ((arg1)->b);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jshort JNICALL Java_touchvg_core_touchvgJNI_GiColor_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (unsigned char) ((arg1)->a);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (GiColor *)new GiColor();
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (GiColor *)new GiColor(arg1,arg2,arg3,arg4);
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (GiColor *)new GiColor(arg1,arg2,arg3);
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiColor *arg1 = 0 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  result = (GiColor *)new GiColor((GiColor const &)*arg1);
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jint jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  bool arg2 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (GiColor *)new GiColor(arg1,arg2);
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiColor_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  GiColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (GiColor *)new GiColor(arg1);
  *(GiColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiColor_1White(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  result = GiColor::White();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiColor_1Black(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  result = GiColor::Black();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiColor_1Invalid(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  result = GiColor::Invalid();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiColor_1getARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (int)((GiColor const *)arg1)->getARGB();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1setARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiColor *arg1 = (GiColor *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setARGB(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1set_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  GiColor *arg1 = (GiColor *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->set(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiColor_1set_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jint jarg5) {
  GiColor *arg1 = (GiColor *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->set(arg2,arg3,arg4,arg5);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiColor_1isInvalid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiColor **)&jarg1; 
  result = (bool)((GiColor const *)arg1)->isInvalid();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiColor_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiColor *arg1 = (GiColor *) 0 ;
  GiColor *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiColor **)&jarg1; 
  arg2 = *(GiColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  result = (bool)((GiColor const *)arg1)->equals((GiColor const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiColor(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiColor *arg1 = (GiColor *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiColor **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kGiLineSolid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiLineStyle result;
  
  (void)jenv;
  (void)jcls;
  result = (GiLineStyle)kGiLineSolid;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextCopyNone_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextCopyNone;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextLineRGB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextLineRGB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextLineAlpha_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextLineAlpha;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextLineARGB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextLineARGB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextLineWidth_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextLineWidth;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextLineStyle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextLineStyle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextFillRGB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextFillRGB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextFillAlpha_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextFillAlpha;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextFillARGB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextFillARGB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_kContextCopyAll_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  GiContextBits result;
  
  (void)jenv;
  (void)jcls;
  result = (GiContextBits)kContextCopyAll;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (GiContext *)new GiContext();
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jlong jresult = 0 ;
  float arg1 ;
  GiColor arg2 ;
  int arg3 ;
  GiColor *arg4 = 0 ;
  bool arg5 ;
  GiColor *argp2 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = (float)jarg1; 
  argp2 = *(GiColor **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null GiColor");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  arg4 = *(GiColor **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  result = (GiContext *)new GiContext(arg1,arg2,arg3,(GiColor const &)*arg4,arg5);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  float arg1 ;
  GiColor arg2 ;
  int arg3 ;
  GiColor *arg4 = 0 ;
  GiColor *argp2 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = (float)jarg1; 
  argp2 = *(GiColor **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null GiColor");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  arg4 = *(GiColor **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  result = (GiContext *)new GiContext(arg1,arg2,arg3,(GiColor const &)*arg4);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  float arg1 ;
  GiColor arg2 ;
  int arg3 ;
  GiColor *argp2 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (float)jarg1; 
  argp2 = *(GiColor **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null GiColor");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  result = (GiContext *)new GiContext(arg1,arg2,arg3);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jfloat jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  float arg1 ;
  GiColor arg2 ;
  GiColor *argp2 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (float)jarg1; 
  argp2 = *(GiColor **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null GiColor");
    return 0;
  }
  arg2 = *argp2; 
  result = (GiContext *)new GiContext(arg1,arg2);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jlong jresult = 0 ;
  float arg1 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = (GiContext *)new GiContext(arg1);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiContext_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiContext *arg1 = 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiContext const & reference is null");
    return 0;
  } 
  result = (GiContext *)new GiContext((GiContext const &)*arg1);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiContext_1copy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  GiContext *arg2 = 0 ;
  int arg3 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = *(GiContext **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiContext const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = (GiContext *) &(arg1)->copy((GiContext const &)*arg2,arg3);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiContext_1copy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  GiContext *arg2 = 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = *(GiContext **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiContext const & reference is null");
    return 0;
  } 
  result = (GiContext *) &(arg1)->copy((GiContext const &)*arg2);
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiContext_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  GiContext *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = *(GiContext **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiContext const & reference is null");
    return 0;
  } 
  result = (bool)((GiContext const *)arg1)->equals((GiContext const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getLineStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getLineStyle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineStyle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setLineStyle(arg2);
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getLineWidth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (float)((GiContext const *)arg1)->getLineWidth();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiContext_1isAutoScale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (bool)((GiContext const *)arg1)->isAutoScale();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineWidth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jboolean jarg3) {
  GiContext *arg1 = (GiContext *) 0 ;
  float arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->setLineWidth(arg2,arg3);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiContext_1isNullLine(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (bool)((GiContext const *)arg1)->isNullLine();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setNullLine(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiContext *arg1 = (GiContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  (arg1)->setNullLine();
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getLineColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = ((GiContext const *)arg1)->getLineColor();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineColor_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  GiContext *arg1 = (GiContext *) 0 ;
  GiColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = *(GiColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return ;
  } 
  (arg1)->setLineColor((GiColor const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineColor_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->setLineColor(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineColor_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jint jarg5) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->setLineColor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getLineARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getLineARGB();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setLineARGB(arg2);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getLineAlpha(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getLineAlpha();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setLineAlpha(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setLineAlpha(arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiContext_1hasFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (bool)((GiContext const *)arg1)->hasFillColor();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setNoFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiContext *arg1 = (GiContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  (arg1)->setNoFillColor();
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = ((GiContext const *)arg1)->getFillColor();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setFillColor_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  GiContext *arg1 = (GiContext *) 0 ;
  GiColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = *(GiColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return ;
  } 
  (arg1)->setFillColor((GiColor const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setFillColor_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->setFillColor(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setFillColor_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jint jarg5) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->setFillColor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getFillARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getFillARGB();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setFillARGB(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setFillARGB(arg2);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getFillAlpha(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getFillAlpha();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setFillAlpha(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setFillAlpha(arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiContext_1isAutoFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (bool)((GiContext const *)arg1)->isAutoFillColor();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiContext_1setAutoFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  GiContext *arg1 = (GiContext *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->setAutoFillColor(arg2);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_GiContext_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GiContext *arg1 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiContext **)&jarg1; 
  result = (int)((GiContext const *)arg1)->getType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiContext(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiContext *arg1 = (GiContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiContext **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiGraphics_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiTransform *arg1 = (GiTransform *) 0 ;
  GiGraphics *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiTransform **)&jarg1; 
  result = (GiGraphics *)new GiGraphics(arg1);
  *(GiGraphics **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiGraphics_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = 0 ;
  GiGraphics *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics const & reference is null");
    return 0;
  } 
  result = (GiGraphics *)new GiGraphics((GiGraphics const &)*arg1);
  *(GiGraphics **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiGraphics(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiGraphics **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiGraphics *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiGraphics **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics const & reference is null");
    return ;
  } 
  (arg1)->copy((GiGraphics const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1xf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiTransform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = (GiTransform *) &((GiGraphics const *)arg1)->xf();
  *(GiTransform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1isDrawing(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = (bool)((GiGraphics const *)arg1)->isDrawing();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1isPrint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = (bool)((GiGraphics const *)arg1)->isPrint();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1isStopping(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = (bool)((GiGraphics const *)arg1)->isStopping();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1stopDrawing(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  (arg1)->stopDrawing();
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1getClipModel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = ((GiGraphics const *)arg1)->getClipModel();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1getClipWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = ((GiGraphics const *)arg1)->getClipWorld();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1getClipBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  RECT_2D *arg2 = 0 ;
  RECT_2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(RECT_2D **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "RECT_2D & reference is null");
    return 0;
  } 
  result = (RECT_2D *) &((GiGraphics const *)arg1)->getClipBox(*arg2);
  *(RECT_2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setClipBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  RECT_2D *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(RECT_2D **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "RECT_2D const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->setClipBox((RECT_2D const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setClipWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->setClipWorld((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1isGrayMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = (bool)((GiGraphics const *)arg1)->isGrayMode();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setGrayMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->setGrayMode(arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1getBkColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  result = ((GiGraphics const *)arg1)->getBkColor();
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setBkColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiColor *arg2 = 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  result = (arg1)->setBkColor((GiColor const &)*arg2);
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1calcPenColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiColor *arg2 = 0 ;
  GiColor result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiColor const & reference is null");
    return 0;
  } 
  result = ((GiGraphics const *)arg1)->calcPenColor((GiColor const &)*arg2);
  *(GiColor **)&jresult = new GiColor((const GiColor &)result); 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1calcPenWidth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jboolean jarg3) {
  jfloat jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  float arg2 ;
  bool arg3 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (float)((GiGraphics const *)arg1)->calcPenWidth(arg2,arg3);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setMaxPenWidth_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->setMaxPenWidth(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1setMaxPenWidth_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = (float)jarg2; 
  (arg1)->setMaxPenWidth(arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawLine_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawLine((GiContext const *)arg2,(Point2d const &)*arg3,(Point2d const &)*arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawLine_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->drawLine((GiContext const *)arg2,(Point2d const &)*arg3,(Point2d const &)*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawLines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawLines((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawLines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawLines((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawBeziers_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawBeziers((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawBeziers_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawBeziers((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawBeziers_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawBeziers((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawArc_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jboolean jarg8) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  bool arg8 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = jarg8 ? true : false; 
  result = (bool)(arg1)->drawArc((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawArc_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  result = (bool)(arg1)->drawArc((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5,arg6,arg7);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawArc3P_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  Point2d *arg5 = 0 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg5 = *(Point2d **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawArc3P((GiContext const *)arg2,(Point2d const &)*arg3,(Point2d const &)*arg4,(Point2d const &)*arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawArc3P_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  Point2d *arg4 = 0 ;
  Point2d *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg5 = *(Point2d **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->drawArc3P((GiContext const *)arg2,(Point2d const &)*arg3,(Point2d const &)*arg4,(Point2d const &)*arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPolygon_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawPolygon((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPolygon_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawPolygon((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawEllipse_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawEllipse((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawEllipse_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (bool)(arg1)->drawEllipse((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawEllipse_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  result = (bool)(arg1)->drawEllipse((GiContext const *)arg2,(Point2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawEllipse_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->drawEllipse((GiContext const *)arg2,(Box2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawEllipse_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->drawEllipse((GiContext const *)arg2,(Box2d const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPie_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jboolean jarg8) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  bool arg8 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = jarg8 ? true : false; 
  result = (bool)(arg1)->drawPie((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPie_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  result = (bool)(arg1)->drawPie((GiContext const *)arg2,(Point2d const &)*arg3,arg4,arg5,arg6,arg7);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawRect_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->drawRect((GiContext const *)arg2,(Box2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawRect_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->drawRect((GiContext const *)arg2,(Box2d const &)*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawRoundRect_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawRoundRect((GiContext const *)arg2,(Box2d const &)*arg3,arg4,arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawRoundRect_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (bool)(arg1)->drawRoundRect((GiContext const *)arg2,(Box2d const &)*arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawRoundRect_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  Box2d *arg3 = 0 ;
  float arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(Box2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  result = (bool)(arg1)->drawRoundRect((GiContext const *)arg2,(Box2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawSplines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  Vector2d *arg5 = (Vector2d *) 0 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = *(Vector2d **)&jarg5; 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,(Vector2d const *)arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawSplines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  Vector2d *arg5 = (Vector2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = *(Vector2d **)&jarg5; 
  result = (bool)(arg1)->drawSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,(Vector2d const *)arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawClosedSplines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jboolean jarg6) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  Vector2d *arg5 = (Vector2d *) 0 ;
  bool arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = *(Vector2d **)&jarg5; 
  arg6 = jarg6 ? true : false; 
  result = (bool)(arg1)->drawClosedSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,(Vector2d const *)arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawClosedSplines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  Vector2d *arg5 = (Vector2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = *(Vector2d **)&jarg5; 
  result = (bool)(arg1)->drawClosedSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,(Vector2d const *)arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawBSplines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawBSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawBSplines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawBSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawClosedBSplines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawClosedBSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawClosedBSplines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawClosedBSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawQuadSplines_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawQuadSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawQuadSplines_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  int arg3 ;
  Point2d *arg4 = (Point2d *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(Point2d **)&jarg4; 
  result = (bool)(arg1)->drawQuadSplines((GiContext const *)arg2,arg3,(Point2d const *)arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPath_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jboolean jarg5) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  GiPath *arg3 = 0 ;
  bool arg4 ;
  bool arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(GiPath **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiPath const & reference is null");
    return 0;
  } 
  arg4 = jarg4 ? true : false; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->drawPath((GiContext const *)arg2,(GiPath const &)*arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawPath_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  GiContext *arg2 = (GiContext *) 0 ;
  GiPath *arg3 = 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(GiContext **)&jarg2; 
  arg3 = *(GiPath **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiPath const & reference is null");
    return 0;
  } 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->drawPath((GiContext const *)arg2,(GiPath const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawHandle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jboolean jarg4) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Point2d *arg2 = 0 ;
  int arg3 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->drawHandle((Point2d const &)*arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiGraphics_1drawHandle_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Point2d *arg2 = 0 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->drawHandle((Point2d const &)*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1GiSaveClipBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  GiGraphics *arg1 = (GiGraphics *) 0 ;
  Box2d *arg2 = 0 ;
  GiSaveClipBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(GiGraphics **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (GiSaveClipBox *)new GiSaveClipBox(arg1,(Box2d const &)*arg2);
  *(GiSaveClipBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiSaveClipBox(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiSaveClipBox *arg1 = (GiSaveClipBox *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiSaveClipBox **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiSaveClipBox_1succeed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiSaveClipBox *arg1 = (GiSaveClipBox *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiSaveClipBox **)&jarg1; 
  result = (bool)((GiSaveClipBox const *)arg1)->succeed();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1GiCanvas(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GiCanvas **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1setPen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jfloat jarg3, jint jarg4, jfloat jarg5) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  int arg2 ;
  float arg3 ;
  int arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->setPen(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1setBrush(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->setBrush(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1clearRect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->clearRect(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawRect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jboolean jarg6, jboolean jarg7) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool arg6 ;
  bool arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = jarg6 ? true : false; 
  arg7 = jarg7 ? true : false; 
  (arg1)->drawRect(arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawLine(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->drawLine(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawEllipse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jboolean jarg6, jboolean jarg7) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool arg6 ;
  bool arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = jarg6 ? true : false; 
  arg7 = jarg7 ? true : false; 
  (arg1)->drawEllipse(arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1beginPath(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  (arg1)->beginPath();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1moveTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->moveTo(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1lineTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  (arg1)->lineTo(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1bezierTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  (arg1)->bezierTo(arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1quadTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->quadTo(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1closePath(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  (arg1)->closePath();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawPath(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2, jboolean jarg3) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  bool arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  (arg1)->drawPath(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1saveClip(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  (arg1)->saveClip();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1restoreClip(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  (arg1)->restoreClip();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1clipRect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
  jboolean jresult = 0 ;
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  result = (bool)(arg1)->clipRect(arg2,arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1clipPath(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  result = (bool)(arg1)->clipPath();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawHandle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jfloat jarg3, jint jarg4) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  float arg2 ;
  float arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->drawHandle(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawBitmap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  (arg1)->drawBitmap((char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1drawTextAt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jint jarg6) {
  jfloat jresult = 0 ;
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  int arg6 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (int)jarg6; 
  result = (float)(arg1)->drawTextAt((char const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jfloat)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1beginShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jfloat jarg8) {
  jboolean jresult = 0 ;
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  result = (bool)(arg1)->beginShape(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_GiCanvas_1endShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jfloat jarg4, jfloat jarg5) {
  GiCanvas *arg1 = (GiCanvas *) 0 ;
  int arg2 ;
  int arg3 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GiCanvas **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->endShape(arg2,arg3,arg4,arg5);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgObject_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  MgObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  result = (MgObject *)((MgObject const *)arg1)->clone();
  *(MgObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgObject_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgObject *arg1 = (MgObject *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgObject **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgObject_1release(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgObject *arg1 = (MgObject *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  (arg1)->release();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgObject_1addRef(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgObject *arg1 = (MgObject *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  (arg1)->addRef();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgObject_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgObject **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgObject const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgObject_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  result = (int)((MgObject const *)arg1)->getType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgObject_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgObject const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShape_1Type(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgShape::Type();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1cloneShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (MgShape *)((MgShape const *)arg1)->cloneShape();
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1context(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (GiContext *)(arg1)->context();
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1contextc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (GiContext *)((MgShape const *)arg1)->contextc();
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1shape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgBaseShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (MgBaseShape *)(arg1)->shape();
  *(MgBaseShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1shapec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgBaseShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (MgBaseShape *)((MgShape const *)arg1)->shapec();
  *(MgBaseShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1hasFillColor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (bool)((MgShape const *)arg1)->hasFillColor();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1draw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  int arg2 ;
  GiGraphics *arg3 = 0 ;
  GiContext *arg4 = (GiContext *) 0 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(GiGraphics **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  arg4 = *(GiContext **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (bool)((MgShape const *)arg1)->draw(arg2,*arg3,(GiContext const *)arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  result = (bool)((MgShape const *)arg1)->save(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  result = (bool)(arg1)->load(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShape_1getID(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (int)((MgShape const *)arg1)->getID();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1getParent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (MgShapes *)((MgShape const *)arg1)->getParent();
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShape_1setParent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  MgShape *arg1 = (MgShape *) 0 ;
  MgShapes *arg2 = (MgShapes *) 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = *(MgShapes **)&jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->setParent(arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShape_1getTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  result = (int)((MgShape const *)arg1)->getTag();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShape_1setTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MgShape *arg1 = (MgShape *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setTag(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShape_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgShape *arg1 = (MgShape *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgShape const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShape_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgShape *arg1 = (MgShape *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgShape const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1nearpt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  Point2d *arg2 = (Point2d *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgHitResult **)&jarg1; 
  arg2 = *(Point2d **)&jarg2; 
  if (arg1) (arg1)->nearpt = *arg2;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1nearpt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  Point2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  result = (Point2d *)& ((arg1)->nearpt);
  *(Point2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1segment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->segment = arg2;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1segment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  result = (int) ((arg1)->segment);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1inside_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->inside = arg2;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1inside_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  result = (bool) ((arg1)->inside);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1dist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dist = arg2;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_MgHitResult_1dist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgHitResult **)&jarg1; 
  result = (float) ((arg1)->dist);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1MgHitResult(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MgHitResult *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MgHitResult *)new MgHitResult();
  *(MgHitResult **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgHitResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgHitResult *arg1 = (MgHitResult *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgHitResult **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgBaseShape(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgBaseShape **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1Type(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgBaseShape::Type();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1minTol(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  Tol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (Tol *) &MgBaseShape::minTol();
  *(Tol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1cloneShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgBaseShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (MgBaseShape *)((MgBaseShape const *)arg1)->cloneShape();
  *(MgBaseShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1setOwner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgShape *arg2 = (MgShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(MgShape **)&jarg2; 
  (arg1)->setOwner(arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getExtent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = ((MgBaseShape const *)arg1)->getExtent();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getChangeCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (long)((MgBaseShape const *)arg1)->getChangeCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1resetChangeCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (long)jarg2; 
  (arg1)->resetChangeCount(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1afterChanged(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  (arg1)->afterChanged();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1update(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  (arg1)->update();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Matrix2d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Matrix2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Matrix2d const & reference is null");
    return ;
  } 
  (arg1)->transform((Matrix2d const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1clearCachedData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  (arg1)->clearCachedData();
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getPointCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (int)((MgBaseShape const *)arg1)->getPointCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((MgBaseShape const *)arg1)->getPoint(arg2);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1setPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  Point2d *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return ;
  } 
  (arg1)->setPoint(arg2,(Point2d const &)*arg3);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1isClosed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (bool)((MgBaseShape const *)arg1)->isClosed();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1isCurve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (bool)((MgBaseShape const *)arg1)->isCurve();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1hitTest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jlong jarg4, jobject jarg4_) {
  jfloat jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Point2d *arg2 = 0 ;
  float arg3 ;
  MgHitResult *arg4 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = *(MgHitResult **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgHitResult & reference is null");
    return 0;
  } 
  result = (float)((MgBaseShape const *)arg1)->hitTest((Point2d const &)*arg2,arg3,*arg4);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1hitTest2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jlong jarg4, jobject jarg4_) {
  jfloat jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Point2d *arg2 = 0 ;
  float arg3 ;
  Point2d *arg4 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Point2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = *(Point2d **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d & reference is null");
    return 0;
  } 
  result = (float)((MgBaseShape const *)arg1)->hitTest2((Point2d const &)*arg2,arg3,*arg4);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1hitTestBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Box2d *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  result = (bool)((MgBaseShape const *)arg1)->hitTestBox((Box2d const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1draw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  GiGraphics *arg3 = 0 ;
  GiContext *arg4 = 0 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(GiGraphics **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  arg4 = *(GiContext **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiContext const & reference is null");
    return 0;
  } 
  arg5 = (int)jarg5; 
  result = (bool)((MgBaseShape const *)arg1)->draw(arg2,*arg3,(GiContext const &)*arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  result = (bool)((MgBaseShape const *)arg1)->save(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  result = (bool)(arg1)->load(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getHandleCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  result = (int)((MgBaseShape const *)arg1)->getHandleCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getHandlePoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  Point2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ((MgBaseShape const *)arg1)->getHandlePoint(arg2);
  *(Point2d **)&jresult = new Point2d((const Point2d &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1setHandlePoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jfloat jarg4) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  Point2d *arg3 = 0 ;
  float arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(Point2d **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Point2d const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  result = (bool)(arg1)->setHandlePoint(arg2,(Point2d const &)*arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1isHandleFixed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgBaseShape const *)arg1)->isHandleFixed(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getHandleType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)((MgBaseShape const *)arg1)->getHandleType(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1offset(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Vector2d *arg2 = 0 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Vector2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vector2d const & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->offset((Vector2d const &)*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1getFlag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgShapeBit arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (MgShapeBit)jarg2; 
  result = (bool)((MgBaseShape const *)arg1)->getFlag(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1setFlag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jboolean jarg3) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgShapeBit arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (MgShapeBit)jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->setFlag(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgBaseShape const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgBaseShape const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1setExtent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgBaseShape *arg1 = (MgBaseShape *) 0 ;
  Box2d *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgBaseShape **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return ;
  } 
  (arg1)->setExtent((Box2d const &)*arg2);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1Type(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgShapes::Type();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1cloneShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgShapes *)((MgShapes const *)arg1)->cloneShapes();
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1create_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  int arg2 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShapes *)MgShapes::create(arg1,arg2);
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1create_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgObject *arg1 = (MgObject *) 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgObject **)&jarg1; 
  result = (MgShapes *)MgShapes::create(arg1);
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1create_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MgShapes *)MgShapes::create();
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1addShapeByType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  int arg3 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (MgShape *)(arg1)->addShapeByType(arg2,arg3);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getShapeCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (int)((MgShapes const *)arg1)->getShapeCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getHeadShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgShape *)((MgShapes const *)arg1)->getHeadShape();
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getLastShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgShape *)((MgShapes const *)arg1)->getLastShape();
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1findShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShape *)((MgShapes const *)arg1)->findShape(arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1findShapeByTag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShape *)((MgShapes const *)arg1)->findShapeByTag(arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1findShapeByType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShape *)((MgShapes const *)arg1)->findShapeByType(arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getExtent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = ((MgShapes const *)arg1)->getExtent();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1hitTest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  Box2d *arg2 = 0 ;
  MgHitResult *arg3 = 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return 0;
  } 
  arg3 = *(MgHitResult **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgHitResult & reference is null");
    return 0;
  } 
  result = (MgShape *)((MgShapes const *)arg1)->hitTest((Box2d const &)*arg2,*arg3);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1draw_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  GiGraphics *arg2 = 0 ;
  GiContext *arg3 = (GiContext *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(GiGraphics **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  arg3 = *(GiContext **)&jarg3; 
  result = (int)((MgShapes const *)arg1)->draw(*arg2,(GiContext const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1draw_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  GiGraphics *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(GiGraphics **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  result = (int)((MgShapes const *)arg1)->draw(*arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1dyndraw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  GiGraphics *arg3 = 0 ;
  GiContext *arg4 = (GiContext *) 0 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(GiGraphics **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  arg4 = *(GiContext **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (int)((MgShapes const *)arg1)->dyndraw(arg2,*arg3,(GiContext const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1save_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)((MgShapes const *)arg1)->save(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1save_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  result = (bool)((MgShapes const *)arg1)->save(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1saveShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  MgShape *arg3 = (MgShape *) 0 ;
  int arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  arg3 = *(MgShape **)&jarg3; 
  arg4 = (int)jarg4; 
  result = (bool)((MgShapes const *)arg1)->saveShape(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1load_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->load(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1load_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  result = (bool)(arg1)->load(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1setNewShapeID(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->setNewShapeID(arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1clearCachedData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  (arg1)->clearCachedData();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1copyShapes_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapes *arg2 = (MgShapes *) 0 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapes **)&jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->copyShapes((MgShapes const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1copyShapes_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapes *arg2 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapes **)&jarg2; 
  (arg1)->copyShapes((MgShapes const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1addShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShape *arg2 = 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShape **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgShape const & reference is null");
    return 0;
  } 
  result = (MgShape *)(arg1)->addShape((MgShape const &)*arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1removeShape_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  bool arg3 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? true : false; 
  result = (MgShape *)(arg1)->removeShape(arg2,arg3);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1removeShape_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShape *)(arg1)->removeShape(arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1moveTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  MgShapes *arg3 = (MgShapes *) 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(MgShapes **)&jarg3; 
  result = (MgShape *)(arg1)->moveTo(arg2,arg3);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1moveAllShapesTo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapes *arg2 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgShapes **)&jarg2; 
  (arg1)->moveAllShapesTo(arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1bringToFront(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)(arg1)->bringToFront(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getOwner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgObject *)((MgShapes const *)arg1)->getOwner();
  *(MgObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getIndex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (int)((MgShapes const *)arg1)->getIndex();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1fromHandle(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  long arg1 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (MgShapes *)MgShapes::fromHandle(arg1);
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1toHandle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (long)(arg1)->toHandle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgObject *)((MgShapes const *)arg1)->clone();
  *(MgObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1release(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  (arg1)->release();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1addRef(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapes *arg1 = (MgShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  (arg1)->addRef();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgShapes const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (int)((MgShapes const *)arg1)->getType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgShapes const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1MgShapeIterator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapes *arg1 = (MgShapes *) 0 ;
  MgShapeIterator *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapes **)&jarg1; 
  result = (MgShapeIterator *)new MgShapeIterator((MgShapes const *)arg1);
  *(MgShapeIterator **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgShapeIterator(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgShapeIterator *arg1 = (MgShapeIterator *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgShapeIterator **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeIterator_1hasNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgShapeIterator *arg1 = (MgShapeIterator *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeIterator **)&jarg1; 
  result = (bool)(arg1)->hasNext();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeIterator_1getNext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeIterator *arg1 = (MgShapeIterator *) 0 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeIterator **)&jarg1; 
  result = (MgShape *)(arg1)->getNext();
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1Type(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgShapeDoc::Type();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1cloneDoc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapeDoc *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (MgShapeDoc *)((MgShapeDoc const *)arg1)->cloneDoc();
  *(MgShapeDoc **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1copyShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapeDoc *arg2 = (MgShapeDoc *) 0 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgShapeDoc **)&jarg2; 
  arg3 = jarg3 ? true : false; 
  (arg1)->copyShapes((MgShapeDoc const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1createDoc(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MgShapeDoc *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MgShapeDoc *)MgShapeDoc::createDoc();
  *(MgShapeDoc **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)((MgShapeDoc const *)arg1)->save(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1saveAll(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgStorage *arg2 = (MgStorage *) 0 ;
  GiTransform *arg3 = (GiTransform *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgStorage **)&jarg2; 
  arg3 = *(GiTransform **)&jarg3; 
  result = (bool)(arg1)->saveAll(arg2,(GiTransform const *)arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->load(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1loadAll(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapeFactory *arg2 = (MgShapeFactory *) 0 ;
  MgStorage *arg3 = (MgStorage *) 0 ;
  GiTransform *arg4 = (GiTransform *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgShapeFactory **)&jarg2; 
  arg3 = *(MgStorage **)&jarg3; 
  arg4 = *(GiTransform **)&jarg4; 
  result = (bool)(arg1)->loadAll(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1clearCachedData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  (arg1)->clearCachedData();
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1draw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  GiGraphics *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(GiGraphics **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "GiGraphics & reference is null");
    return 0;
  } 
  result = (int)((MgShapeDoc const *)arg1)->draw(*arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getExtent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = ((MgShapeDoc const *)arg1)->getExtent();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getShapeCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (int)((MgShapeDoc const *)arg1)->getShapeCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getCurrentShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (MgShapes *)((MgShapeDoc const *)arg1)->getCurrentShapes();
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1setCurrentShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgShapes *arg2 = (MgShapes *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgShapes **)&jarg2; 
  result = (bool)(arg1)->setCurrentShapes(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getCurrentLayer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (MgLayer *)((MgShapeDoc const *)arg1)->getCurrentLayer();
  *(MgLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1switchLayer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)(arg1)->switchLayer(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getLayerCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (int)((MgShapeDoc const *)arg1)->getLayerCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1context(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  GiContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (GiContext *)(arg1)->context();
  *(GiContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1modelTransform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  Matrix2d *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (Matrix2d *) &(arg1)->modelTransform();
  *(Matrix2d **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getPageRectW(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  Box2d result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = ((MgShapeDoc const *)arg1)->getPageRectW();
  *(Box2d **)&jresult = new Box2d((const Box2d &)result); 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getViewScale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (float)((MgShapeDoc const *)arg1)->getViewScale();
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1setPageRectW(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  Box2d *arg2 = 0 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(Box2d **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Box2d const & reference is null");
    return ;
  } 
  arg3 = (float)jarg3; 
  (arg1)->setPageRectW((Box2d const &)*arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getChangeCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (long)((MgShapeDoc const *)arg1)->getChangeCount();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1isReadOnly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (bool)((MgShapeDoc const *)arg1)->isReadOnly();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1setReadOnly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->setReadOnly(arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1fromHandle(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  long arg1 ;
  MgShapeDoc *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (MgShapeDoc *)MgShapeDoc::fromHandle(arg1);
  *(MgShapeDoc **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1toHandle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (long)(arg1)->toHandle();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (MgObject *)((MgShapeDoc const *)arg1)->clone();
  *(MgObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1release(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  (arg1)->release();
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1addRef(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  (arg1)->addRef();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgShapeDoc const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  result = (int)((MgShapeDoc const *)arg1)->getType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgShapeDoc const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeFactory_1createShape(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapeFactory *arg1 = (MgShapeFactory *) 0 ;
  int arg2 ;
  MgShape *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeFactory **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgShape *)(arg1)->createShape(arg2);
  *(MgShape **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgShapeFactory(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgShapeFactory *arg1 = (MgShapeFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgShapeFactory **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1Type(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgLayer::Type();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1cloneLayer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  MgLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (MgLayer *)((MgLayer const *)arg1)->cloneLayer();
  *(MgLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1create(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  MgShapeDoc *arg1 = (MgShapeDoc *) 0 ;
  int arg2 ;
  MgLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeDoc **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (MgLayer *)MgLayer::create(arg1,arg2);
  *(MgLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1doc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  MgShapeDoc *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (MgShapeDoc *)((MgLayer const *)arg1)->doc();
  *(MgShapeDoc **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1isHided(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (bool)((MgLayer const *)arg1)->isHided();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1setHided(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  MgLayer *arg1 = (MgLayer *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->setHided(arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1isLocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (bool)((MgLayer const *)arg1)->isLocked();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1setLocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  MgLayer *arg1 = (MgLayer *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->setLocked(arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  MgObject *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (MgObject *)((MgLayer const *)arg1)->clone();
  *(MgObject **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgLayer *arg1 = (MgLayer *) 0 ;
  MgObject *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgLayer **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return ;
  } 
  (arg1)->copy((MgObject const &)*arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1release(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgLayer *arg1 = (MgLayer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  (arg1)->release();
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1equals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  MgObject *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgLayer **)&jarg1; 
  arg2 = *(MgObject **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MgObject const & reference is null");
    return 0;
  } 
  result = (bool)((MgLayer const *)arg1)->equals((MgObject const &)*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1getType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  result = (int)((MgLayer const *)arg1)->getType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1isKindOf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  MgLayer *arg1 = (MgLayer *) 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (bool)((MgLayer const *)arg1)->isKindOf(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1readNode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jboolean jarg4) {
  jboolean jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->readNode((char const *)arg2,arg3,arg4);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeNode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jboolean jarg4) {
  jboolean jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (bool)(arg1)->writeNode((char const *)arg2,arg3,arg4);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1readBool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jboolean jarg3) {
  jboolean jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = jarg3 ? true : false; 
  result = (bool)(arg1)->readBool((char const *)arg2,arg3);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1readFloat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3) {
  jfloat jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (float)jarg3; 
  result = (float)(arg1)->readFloat((char const *)arg2,arg3);
  jresult = (jfloat)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeBool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jboolean jarg3) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = jarg3 ? true : false; 
  (arg1)->writeBool((char const *)arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeFloat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (float)jarg3; 
  (arg1)->writeFloat((char const *)arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  (arg1)->writeString((char const *)arg2,(char const *)arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1readInt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)(arg1)->readInt((char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeInt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int)jarg3; 
  (arg1)->writeInt((char const *)arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1writeUInt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (int)jarg3; 
  (arg1)->writeUInt((char const *)arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgStorage_1setError(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  MgStorage *arg1 = (MgStorage *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgStorage **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (bool)(arg1)->setError((char const *)arg2);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgStorage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgStorage *arg1 = (MgStorage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgStorage **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgBasicShapes_1registerShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MgShapeFactory *arg1 = (MgShapeFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgShapeFactory **)&jarg1; 
  MgBasicShapes::registerShapes(arg1);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1MgBasicShapes(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MgBasicShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MgBasicShapes *)new MgBasicShapes();
  *(MgBasicShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgBasicShapes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgBasicShapes *arg1 = (MgBasicShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgBasicShapes **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1ADD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::ADD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1EDIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::EDIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1DEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::DEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1STATIC_1CHANGED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::STATIC_CHANGED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1DYNAMIC_1CHANGED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::DYNAMIC_CHANGED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1FRAME_1CHANGED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::FRAME_CHANGED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1TICKMASK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MgPlayShapes::TICKMASK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_new_1MgPlayShapes(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  GiTransform *arg2 = (GiTransform *) 0 ;
  MgPlayShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(GiTransform **)&jarg2; 
  result = (MgPlayShapes *)new MgPlayShapes((char const *)arg1,arg2);
  *(MgPlayShapes **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_delete_1MgPlayShapes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MgPlayShapes **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jboolean JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1loadFirstFile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgPlayShapes **)&jarg1; 
  result = (bool)(arg1)->loadFirstFile();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1loadNextFile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgPlayShapes **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->loadNextFile(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1copyXform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  GiTransform *arg2 = (GiTransform *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(MgPlayShapes **)&jarg1; 
  arg2 = *(GiTransform **)&jarg2; 
  (arg1)->copyXform(arg2);
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1pickFrontDoc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  MgShapeDoc *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgPlayShapes **)&jarg1; 
  result = (MgShapeDoc *)(arg1)->pickFrontDoc();
  *(MgShapeDoc **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgPlayShapes_1pickDynShapes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MgPlayShapes *arg1 = (MgPlayShapes *) 0 ;
  MgShapes *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MgPlayShapes **)&jarg1; 
  result = (MgShapes *)(arg1)->pickDynShapes();
  *(MgShapes **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShape_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(MgObject **)&baseptr = *(MgShape **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgBaseShape_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(MgObject **)&baseptr = *(MgBaseShape **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapes_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(MgObject **)&baseptr = *(MgShapes **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgShapeDoc_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(MgObject **)&baseptr = *(MgShapeDoc **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_touchvg_core_touchvgJNI_MgLayer_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(MgShapes **)&baseptr = *(MgLayer **)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

